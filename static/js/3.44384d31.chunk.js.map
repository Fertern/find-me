{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Dialog/Dialog.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/AddMessageForm/AddMessageForm.module.css","../node_modules/@material-ui/icons/SpeakerNotesOff.js","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","_interopRequireDefault","Object","defineProperty","value","default","_react","_default","createElement","d","Dialog","name","counter","path","id","className","style","item","activeClassName","active","to","Message","text","wrapper","message","maxLength300","maxLengthCreator","reduxForm","form","handleSubmit","reset","addNewMessage","customSubmit","values","onSubmit","Field","component","textarea","placeholder","validate","requiredField","onKeyDown","onTapEnter","button","Dialogs","dialogs","messages","setUpDialogs","useEffect","display","margin","flexDirection","alignItems","fontSize","color","Typography","variant","dialogsElements","map","dialog","key","count","messagesElements","peopleArea","messageArea","senderArea","mapDispatchToProps","compose","connect","state","dialogsPage","withAuthRedirect"],"mappings":"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","file":"static/js/3.44384d31.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2DzOf\",\"peopleArea\":\"Dialogs_peopleArea__1NyDc\",\"senderArea\":\"Dialogs_senderArea__3rjMt\",\"messageArea\":\"Dialogs_messageArea__2Lg47\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Dialog_item__i8LTf\",\"active\":\"Dialog_active__1MkXe\",\"counter\":\"Dialog_counter__1Iwap\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Message_wrapper__1kjI7\",\"message\":\"Message_message__1kYik\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AddMessageForm_wrapper__5sWpe\",\"textarea\":\"AddMessageForm_textarea__2u_c3\",\"button\":\"AddMessageForm_button__3WG1t\"};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M10.54 11l-.54-.54L7.54 8 6 6.46 2.38 2.84 1.27 1.73 0 3l2.01 2.01L2 22l4-4h9l5.73 5.73L22 22.46 17.54 18l-7-7zM8 14H6v-2h2v2zm-2-3V9l2 2H6zm14-9H4.08L10 7.92V6h8v2h-7.92l1 1H18v2h-4.92l6.99 6.99C21.14 17.95 22 17.08 22 16V4c0-1.1-.9-2-2-2z\"\n}), 'SpeakerNotesOff');\n\nexports.default = _default;","import style from \"./Dialog.module.css\";\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Dialog = ({ name, counter, id }) => {\r\n  let path = \"/dialogs/\" + id;\r\n  return (\r\n    <div className={style.item}>\r\n      <NavLink activeClassName={style.active} to={path}>\r\n        {name}\r\n      </NavLink>\r\n      <div className={style.counter}>{counter}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialog;\r\n","import React from \"react\";\r\nimport style from \"./Message.module.css\";\r\n\r\nconst Message = ({ text }) => {\r\n  return (\r\n    <div className={style.wrapper}>\r\n      <span className={style.message}>\r\n        <span>{text}</span>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport style from \"./AddMessageForm.module.css\";\r\nimport {\r\n  requiredField,\r\n  maxLengthCreator\r\n} from \"../../../Utils/validators/validators\";\r\nimport { onTapEnter } from \"../../../Utils/onTapEnter\";\r\n\r\nconst maxLength300 = maxLengthCreator(300);\r\n\r\nconst AddMessageForm = ({ handleSubmit, reset, addNewMessage }) => {\r\n  const submit = values => {\r\n    addNewMessage(values);\r\n    reset();\r\n  };\r\n  const customSubmit = handleSubmit(submit);\r\n  return (\r\n    <form onSubmit={customSubmit} className={style.wrapper}>\r\n      <Field\r\n        component=\"textarea\"\r\n        name=\"message\"\r\n        className={style.textarea}\r\n        placeholder=\"Write something...\"\r\n        validate={[requiredField, maxLength300]}\r\n        onKeyDown={onTapEnter(customSubmit)}\r\n      />\r\n      <button className={style.button}>Send</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default reduxForm({ form: \"dialogAddMessage\" })(AddMessageForm);\r\n","import React, { useEffect } from \"react\";\r\nimport style from \"./Dialogs.module.css\";\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport Message from \"./Message/Message\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\nimport SpeakerNotesOffIcon from \"@material-ui/icons/SpeakerNotesOff\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst Dialogs = ({ dialogs, messages, setUpDialogs, addNewMessage }) => {\r\n  useEffect(() => {\r\n    setUpDialogs();\r\n  }, [setUpDialogs]);\r\n  if (dialogs) {\r\n    return (\r\n      <div style={{ display: \"flex\" }}>\r\n        <div\r\n          style={{\r\n            margin: \"0 auto\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\"\r\n          }}\r\n        >\r\n          <SpeakerNotesOffIcon\r\n            style={{ fontSize: \"200px\", color: \"rgb(24, 66, 95)\" }}\r\n          />\r\n          <Typography style={{ color: \"var(--primaryColor\" }} variant=\"h4\">\r\n            No incoming messages\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  const dialogsElements = dialogs.map(dialog => (\r\n      <Dialog\r\n        name={dialog.name}\r\n        key={dialog.id}\r\n        id={dialog.id}\r\n        counter={dialog.count}\r\n      />\r\n    )),\r\n    messagesElements = messages.map(message => (\r\n      <Message key={message.id} text={message.text} />\r\n    ));\r\n\r\n  return (\r\n    <div className={style.dialogs}>\r\n      <div className={style.peopleArea}>\r\n        <div className={style.item}>{dialogsElements}</div>\r\n      </div>\r\n      <div className={style.messageArea}>\r\n        <div className={style.messages}>{messagesElements}</div>\r\n\r\n        <div className={style.senderArea}>\r\n          <AddMessageForm addNewMessage={addNewMessage} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import Dialogs from \"./Dialogs\";\r\nimport { addNewMessage, setUpDialogs } from \"../../redux/dialogsPageReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nconst mapStateToProps = state => ({\r\n  dialogs: state.dialogsPage.dialogs,\r\n  messages: state.dialogsPage.messages\r\n});\r\nconst mapDispatchToProps = {\r\n  addNewMessage,\r\n  setUpDialogs\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}